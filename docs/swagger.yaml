definitions:
  api.AcceptInviteReq:
    properties:
      group_id:
        type: integer
      invitee_info:
        $ref: '#/definitions/pto.PlayerInfo'
      inviter_uid:
        type: string
    required:
    - group_id
    - invitee_info
    - inviter_uid
    type: object
  api.ChangeRoleReq:
    properties:
      captain_uid:
        type: string
      role:
        $ref: '#/definitions/entry.GroupRole'
      target_uid:
        type: string
    required:
    - captain_uid
    - role
    - target_uid
    type: object
  api.CreateGroupRsp:
    properties:
      group_id:
        type: integer
    type: object
  api.EnterGroupReq:
    properties:
      group_id:
        type: integer
      player_info:
        $ref: '#/definitions/pto.EnterGroup'
    required:
    - group_id
    - player_info
    type: object
  api.InviteReq:
    properties:
      invitee_uid:
        type: string
      inviter_uid:
        type: string
    required:
    - invitee_uid
    - inviter_uid
    type: object
  api.KickPlayerReq:
    properties:
      captain_uid:
        type: string
      kicked_uid:
        type: string
    required:
    - captain_uid
    - kicked_uid
    type: object
  api.RefuseInviteReq:
    properties:
      group_id:
        type: integer
      invitee_uid:
        type: string
      inviter_uid:
        type: string
      refuse_msg:
        type: string
    required:
    - group_id
    - invitee_uid
    - inviter_uid
    type: object
  api.SetNearbyJoinGroupReq:
    properties:
      allow:
        type: boolean
      captain_uid:
        type: string
    required:
    - captain_uid
    type: object
  api.SetRecentJoinGroupReq:
    properties:
      allow:
        type: boolean
      captain_uid:
        type: string
    required:
    - captain_uid
    type: object
  api.SetVoiceStateReq:
    properties:
      state:
        allOf:
        - $ref: '#/definitions/entry.PlayerVoiceState'
        maximum: 1
        minimum: 0
      uid:
        type: string
    required:
    - uid
    type: object
  constant.GameMode:
    enum:
    - -1
    - 905
    type: integer
    x-enum-varnames:
    - GameModeTest
    - GameModeGoatGame
  entry.GroupRole:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - GroupRoleMember
    - GroupRoleCaptain
  entry.PlayerVoiceState:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - PlayerVoiceStateMute
    - PlayerVoiceStateUnmute
  pto.CreateGroup:
    properties:
      game_mode:
        $ref: '#/definitions/constant.GameMode'
      glicko2_info:
        $ref: '#/definitions/pto.Glicko2Info'
      mode_version:
        type: integer
      uid:
        type: string
    required:
    - game_mode
    - mode_version
    - uid
    type: object
  pto.EnterGroup:
    properties:
      game_mode:
        $ref: '#/definitions/constant.GameMode'
      glicko2_info:
        $ref: '#/definitions/pto.Glicko2Info'
      mode_version:
        type: integer
      source:
        $ref: '#/definitions/pto.EnterGroupSourceType'
      uid:
        type: string
    required:
    - game_mode
    - mode_version
    - uid
    type: object
  pto.EnterGroupSourceType:
    enum:
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    type: integer
    x-enum-comments:
      EnterGroupSourceTypeClanChannel: from clan channel
      EnterGroupSourceTypeFriend: from friend list
      EnterGroupSourceTypeNearby: from recent list
      EnterGroupSourceTypeRecent: from nearby list
      EnterGroupSourceTypeShare: from share link
      EnterGroupSourceTypeWorldChannel: from world channel
    x-enum-varnames:
    - EnterGroupSourceTypeNearby
    - EnterGroupSourceTypeRecent
    - EnterGroupSourceTypeFriend
    - EnterGroupSourceTypeWorldChannel
    - EnterGroupSourceTypeClanChannel
    - EnterGroupSourceTypeShare
  pto.Glicko2Info:
    properties:
      mmr:
        type: number
      rank:
        type: integer
      star:
        type: integer
      start_match_sec:
        type: integer
    type: object
  pto.PlayerInfo:
    properties:
      game_mode:
        $ref: '#/definitions/constant.GameMode'
      glicko2_info:
        $ref: '#/definitions/pto.Glicko2Info'
      mode_version:
        type: integer
      uid:
        type: string
    required:
    - game_mode
    - mode_version
    - uid
    type: object
info:
  contact: {}
paths:
  /match/accept_invite:
    post:
      consumes:
      - application/json
      description: accept an invitation based on the request
      parameters:
      - description: Accept Invite Request Body
        in: body
        name: AcceptInviteReq
        required: true
        schema:
          $ref: '#/definitions/api.AcceptInviteReq'
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: accept an invitation
      tags:
      - match service
  /match/cancel_match/{uid}:
    post:
      consumes:
      - application/json
      description: cancel match
      parameters:
      - description: player uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: cancel match
      tags:
      - match service
  /match/change_role:
    post:
      consumes:
      - application/json
      description: change a player's role based on the request
      parameters:
      - description: Change Role Request Body
        in: body
        name: ChangeRoleReq
        required: true
        schema:
          $ref: '#/definitions/api.ChangeRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: change a player's role
      tags:
      - match service
  /match/create_group:
    post:
      consumes:
      - application/json
      description: create a new group based on the request
      parameters:
      - description: Create Group Request Body
        in: body
        name: CreateGroup
        required: true
        schema:
          $ref: '#/definitions/pto.CreateGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: create a new group
      tags:
      - match service
  /match/dissolve_group/{uid}:
    post:
      consumes:
      - application/json
      description: dissolve a group based on the request
      parameters:
      - description: User ID
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
      summary: dissolve a group
      tags:
      - match service
  /match/enter_group:
    post:
      consumes:
      - application/json
      description: enter a group based on the request
      parameters:
      - description: Enter Group Request Body
        in: body
        name: EnterGroupReq
        required: true
        schema:
          $ref: '#/definitions/api.EnterGroupReq'
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: enter a group
      tags:
      - match service
  /match/exit_group/{uid}:
    post:
      consumes:
      - application/json
      description: exit a group based on the request
      parameters:
      - description: User ID
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
      summary: exit a group
      tags:
      - match service
  /match/invite:
    post:
      consumes:
      - application/json
      description: invite a player based on the request
      parameters:
      - description: Invite Request Body
        in: body
        name: InviteReq
        required: true
        schema:
          $ref: '#/definitions/api.InviteReq'
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: invite a player
      tags:
      - match service
  /match/kick_player:
    post:
      consumes:
      - application/json
      description: kick a player based on the request
      parameters:
      - description: Kick Player Request Body
        in: body
        name: KickPlayerReq
        required: true
        schema:
          $ref: '#/definitions/api.KickPlayerReq'
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: kick a player
      tags:
      - match service
  /match/refuse_invite:
    post:
      consumes:
      - application/json
      description: refuse an invitation based on the request
      parameters:
      - description: Refuse Invite Request Body
        in: body
        name: RefuseInviteReq
        required: true
        schema:
          $ref: '#/definitions/api.RefuseInviteReq'
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: refuse an invitation
      tags:
      - match service
  /match/set_nearby_join_group:
    post:
      consumes:
      - application/json
      description: set whether group can be entered from nearby players list
      parameters:
      - description: Set Nearby Join Group Request Body
        in: body
        name: SetNearbyJoinGroupReq
        required: true
        schema:
          $ref: '#/definitions/api.SetNearbyJoinGroupReq'
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: set nearby join group
      tags:
      - match service
  /match/set_recent_join_group:
    post:
      consumes:
      - application/json
      description: set whether group can be entered from recent players list
      parameters:
      - description: Set Recent Join Group Request Body
        in: body
        name: SetRecentJoinGroupReq
        required: true
        schema:
          $ref: '#/definitions/api.SetRecentJoinGroupReq'
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: set recent join group
      tags:
      - match service
  /match/set_voice_state:
    post:
      consumes:
      - application/json
      description: set player voice state
      parameters:
      - description: Set Voice State Request Body
        in: body
        name: SetVoiceStateReq
        required: true
        schema:
          $ref: '#/definitions/api.SetVoiceStateReq'
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: set voice state
      tags:
      - match service
  /match/start_match/{uid}:
    post:
      consumes:
      - application/json
      description: start to match
      parameters:
      - description: player uid
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Concrete Error Msg
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: start match
      tags:
      - match service
swagger: "2.0"
